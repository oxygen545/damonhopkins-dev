Inspecting 62 files
.C.......CCCCCCCCCCCCCCCCCCCCCCCCCCCWCWCCWCCCCCCCCCCCCCCCCCCCC

Offenses:

Gemfile:52:3: C: Layout/CommentIndentation: Incorrect indentation detected (column 2 instead of 0).
  # gem 'byebug', platforms: [:mri, :mingw, :x64_mingw]
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Gemfile:54:1: C: Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.
%w[rspec-core rspec-expectations rspec-mocks rspec-rails rspec-support].each do |lib|

Gemfile:54:81: C: Metrics/LineLength: Line is too long. [85/80]
%w[rspec-core rspec-expectations rspec-mocks rspec-rails rspec-support].each do |lib|
                                                                                ^^^^^
Gemfile:55:12: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  gem lib, :git => "https://github.com/rspec/#{lib}.git", :branch => 'master'
           ^^^^^^^
Gemfile:55:59: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
  gem lib, :git => "https://github.com/rspec/#{lib}.git", :branch => 'master'
                                                          ^^^^^^^^^^
Gemfile:58:3: C: Layout/IndentationConsistency: Inconsistent indentation detected.
  gem 'sqlite3'
  ^^^^^^^^^^^^^
config/initializers/devise.rb:41:81: C: Metrics/LineLength: Line is too long. [83/80]
  # session. If you need permissions, you should implement that in a before filter.
                                                                                ^^^
config/initializers/devise.rb:46:81: C: Metrics/LineLength: Line is too long. [84/80]
  # Configure parameters from the request object used for authentication. Each entry
                                                                                ^^^^
config/initializers/devise.rb:48:81: C: Metrics/LineLength: Line is too long. [85/80]
  # find_for_authentication method and considered in your model lookup. For instance,
                                                                                ^^^^^
config/initializers/devise.rb:49:81: C: Metrics/LineLength: Line is too long. [88/80]
  # if you set :request_keys to [:subdomain], :subdomain will be used on authentication.
                                                                                ^^^^^^^^
config/initializers/devise.rb:50:81: C: Metrics/LineLength: Line is too long. [89/80]
  # The same considerations mentioned for authentication_keys also apply to request_keys.
                                                                                ^^^^^^^^^
config/initializers/devise.rb:60:81: C: Metrics/LineLength: Line is too long. [85/80]
  # modifying a user and when used to authenticate or find a user. Default is :email.
                                                                                ^^^^^
config/initializers/devise.rb:64:81: C: Metrics/LineLength: Line is too long. [81/80]
  # It can be set to an array that will enable params authentication only for the
                                                                                ^
config/initializers/devise.rb:65:81: C: Metrics/LineLength: Line is too long. [85/80]
  # given strategies, for example, `config.params_authenticatable = [:database]` will
                                                                                ^^^^^
config/initializers/devise.rb:71:81: C: Metrics/LineLength: Line is too long. [83/80]
  # given strategies, for example, `config.http_authenticatable = [:database]` will
                                                                                ^^^
config/initializers/devise.rb:73:81: C: Metrics/LineLength: Line is too long. [84/80]
  # :database      = Support basic authentication with authentication key + password
                                                                                ^^^^
config/initializers/devise.rb:108:81: C: Metrics/LineLength: Line is too long. [86/80]
  # using other algorithms, it sets how many times you want the password to be hashed.
                                                                                ^^^^^^
config/initializers/devise.rb:110:81: C: Metrics/LineLength: Line is too long. [82/80]
  # Limiting the stretches to just one in testing will increase the performance of
                                                                                ^^
config/initializers/devise.rb:112:81: C: Metrics/LineLength: Line is too long. [82/80]
  # a value less than 10 in other environments. Note that, for bcrypt (the default
                                                                                ^^
config/initializers/devise.rb:113:81: C: Metrics/LineLength: Line is too long. [83/80]
  # algorithm), the cost increases exponentially with the number of stretches (e.g.
                                                                                ^^^
config/initializers/devise.rb:114:81: C: Metrics/LineLength: Line is too long. [83/80]
  # a value of 20 is already extremely slow: approx. 60 seconds for 1 calculation).
                                                                                ^^^
config/initializers/devise.rb:118:81: C: Metrics/LineLength: Line is too long. [150/80]
  # config.pepper = '7dcfc25aa3974c43ca5f98a0193c4eb092c4815c606dd659140b89405659a09e3dd26c041a6d2ab7341c4a47f8de34461a00b252cb9f5da6cdb3442c97f70926'
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/devise.rb:143:81: C: Metrics/LineLength: Line is too long. [86/80]
  # initial account confirmation) to be applied. Requires additional unconfirmed_email
                                                                                ^^^^^^
config/initializers/devise.rb:145:81: C: Metrics/LineLength: Line is too long. [84/80]
  # unconfirmed_email column, and copied to email column on successful confirmation.
                                                                                ^^^^
config/initializers/devise.rb:181:81: C: Metrics/LineLength: Line is too long. [85/80]
  # :failed_attempts = Locks an account after a number of failed attempts to sign in.
                                                                                ^^^^^
config/initializers/devise.rb:190:81: C: Metrics/LineLength: Line is too long. [83/80]
  # :time  = Re-enables login after a certain amount of time (see :unlock_in below)
                                                                                ^^^
config/initializers/devise.rb:215:81: C: Metrics/LineLength: Line is too long. [84/80]
  # When set to false, does not sign a user in automatically after their password is
                                                                                ^^^^
config/initializers/devise.rb:220:81: C: Metrics/LineLength: Line is too long. [86/80]
  # Allow you to use another hashing or encryption algorithm besides bcrypt (default).
                                                                                ^^^^^^
config/initializers/devise.rb:222:81: C: Metrics/LineLength: Line is too long. [81/80]
  # :clearance_sha1, :authlogic_sha512 (then you should set stretches above to 20
                                                                                ^
config/initializers/devise.rb:230:81: C: Metrics/LineLength: Line is too long. [82/80]
  # Turn scoped views on. Before rendering "sessions/new", it will first check for
                                                                                ^^
config/initializers/devise.rb:260:3: C: Layout/LeadingCommentSpace: Missing space after #.
  #config.omniauth :google, ENV['OMNIAUTH_GOOGLE_ID'], ENV['OMMIAUTH_GOOGLE_SECRET'], scope: 'user,public_repo'
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/devise.rb:260:81: C: Metrics/LineLength: Line is too long. [111/80]
  #config.omniauth :google, ENV['OMNIAUTH_GOOGLE_ID'], ENV['OMMIAUTH_GOOGLE_SECRET'], scope: 'user,public_repo'
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/devise.rb:264:81: C: Metrics/LineLength: Line is too long. [82/80]
  # change the failure app, you can configure them inside the config.warden block.
                                                                                ^^
config/initializers/devise.rb:272:81: C: Metrics/LineLength: Line is too long. [81/80]
  # When using Devise inside an engine, let's call it `MyEngine`, and this engine
                                                                                ^
config/initializers/devise.rb:286:81: C: Metrics/LineLength: Line is too long. [116/80]
  # If your app is using Turbolinks, Turbolinks::Controller needs to be included to make redirection work correctly:
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/backtrace_silencers.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
# Be sure to restart your server when you modify this file.
^
config/initializers/backtrace_silencers.rb:3:81: C: Metrics/LineLength: Line is too long. [107/80]
# You can add backtrace silencers for libraries that you're using but don't wish to see in your backtraces.
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/backtrace_silencers.rb:6:81: C: Metrics/LineLength: Line is too long. [112/80]
# You can also remove all the silencers if you're trying to debug a problem that might stem from framework code.
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/inflections.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
# Be sure to restart your server when you modify this file.
^
config/initializers/assets.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
# Be sure to restart your server when you modify this file.
^
config/initializers/assets.rb:14:47: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
Rails.application.config.assets.precompile += %w( jquery-slim.min.js )
                                              ^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/assets.rb:14:50: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( jquery-slim.min.js )
                                                 ^
config/initializers/assets.rb:14:69: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( jquery-slim.min.js )
                                                                    ^
config/initializers/assets.rb:15:47: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
Rails.application.config.assets.precompile += %w( popper.min.js )
                                              ^^^^^^^^^^^^^^^^^^^
config/initializers/assets.rb:15:50: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( popper.min.js )
                                                 ^
config/initializers/assets.rb:15:64: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( popper.min.js )
                                                               ^
config/initializers/assets.rb:16:47: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
Rails.application.config.assets.precompile += %w( bootstrap/bootstrap.js )
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/assets.rb:16:50: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( bootstrap/bootstrap.js )
                                                 ^
config/initializers/assets.rb:16:73: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( bootstrap/bootstrap.js )
                                                                        ^
config/initializers/assets.rb:17:47: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
Rails.application.config.assets.precompile += %w( bootstrap/bootstrap.css )
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/assets.rb:17:50: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( bootstrap/bootstrap.css )
                                                 ^
config/initializers/assets.rb:17:74: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( bootstrap/bootstrap.css )
                                                                         ^
config/initializers/assets.rb:19:47: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
Rails.application.config.assets.precompile += %w( lux.scss )
                                              ^^^^^^^^^^^^^^
config/initializers/assets.rb:19:50: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( lux.scss )
                                                 ^
config/initializers/assets.rb:19:59: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( lux.scss )
                                                          ^
config/initializers/assets.rb:20:47: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
Rails.application.config.assets.precompile += %w( cyborg.scss )
                                              ^^^^^^^^^^^^^^^^^
config/initializers/assets.rb:20:50: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( cyborg.scss )
                                                 ^
config/initializers/assets.rb:20:62: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( cyborg.scss )
                                                             ^
config/initializers/assets.rb:22:47: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
Rails.application.config.assets.precompile += %w( album.scss )
                                              ^^^^^^^^^^^^^^^^
config/initializers/assets.rb:22:50: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( album.scss )
                                                 ^
config/initializers/assets.rb:22:61: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( album.scss )
                                                            ^
config/initializers/assets.rb:23:47: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
Rails.application.config.assets.precompile += %w( carousel.scss )
                                              ^^^^^^^^^^^^^^^^^^^
config/initializers/assets.rb:23:50: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( carousel.scss )
                                                 ^
config/initializers/assets.rb:23:64: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( carousel.scss )
                                                               ^
config/initializers/assets.rb:24:47: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
Rails.application.config.assets.precompile += %w( cover.scss )
                                              ^^^^^^^^^^^^^^^^
config/initializers/assets.rb:24:50: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( cover.scss )
                                                 ^
config/initializers/assets.rb:24:61: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( cover.scss )
                                                            ^
config/initializers/assets.rb:25:47: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
Rails.application.config.assets.precompile += %w( jumbotron.scss )
                                              ^^^^^^^^^^^^^^^^^^^^
config/initializers/assets.rb:25:50: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( jumbotron.scss )
                                                 ^
config/initializers/assets.rb:25:65: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( jumbotron.scss )
                                                                ^
config/initializers/assets.rb:26:47: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
Rails.application.config.assets.precompile += %w( pricing.scss )
                                              ^^^^^^^^^^^^^^^^^^
config/initializers/assets.rb:26:50: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( pricing.scss )
                                                 ^
config/initializers/assets.rb:26:63: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( pricing.scss )
                                                              ^
config/initializers/assets.rb:28:47: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
Rails.application.config.assets.precompile += %w( tech_stack.scss )
                                              ^^^^^^^^^^^^^^^^^^^^^
config/initializers/assets.rb:28:50: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( tech_stack.scss )
                                                 ^
config/initializers/assets.rb:28:66: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( tech_stack.scss )
                                                                 ^
config/initializers/assets.rb:29:47: C: Style/PercentLiteralDelimiters: %w-literals should be delimited by [ and ].
Rails.application.config.assets.precompile += %w( adhoc.scss )
                                              ^^^^^^^^^^^^^^^^
config/initializers/assets.rb:29:50: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( adhoc.scss )
                                                 ^
config/initializers/assets.rb:29:61: C: Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
Rails.application.config.assets.precompile += %w( adhoc.scss )
                                                            ^
config/initializers/active_admin.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
ActiveAdmin.setup do |config|
^
config/initializers/active_admin.rb:119:81: C: Metrics/LineLength: Line is too long. [83/80]
  # This allows your users to comment on any resource registered with Active Admin.
                                                                                ^^^
config/initializers/active_admin.rb:184:81: C: Metrics/LineLength: Line is too long. [87/80]
  # Create another checkbox is disabled by default. You can customize it for individual
                                                                                ^^^^^^^
config/initializers/active_admin.rb:198:81: C: Metrics/LineLength: Line is too long. [101/80]
  # You can provide an options hash for more control, which is passed along to stylesheet_link_tag():
                                                                                ^^^^^^^^^^^^^^^^^^^^^
config/initializers/active_admin.rb:214:81: C: Metrics/LineLength: Line is too long. [94/80]
  # You can add a navigation menu to be used in your application, or configure a provided menu
                                                                                ^^^^^^^^^^^^^^
config/initializers/active_admin.rb:216:81: C: Metrics/LineLength: Line is too long. [90/80]
  # To change the default utility navigation to show a link to your website & a logout btn
                                                                                ^^^^^^^^^^
config/initializers/active_admin.rb:220:82: C: Metrics/LineLength: Line is too long. [116/80]
  #       menu.add label: "My Great Website", url: "http://www.mygreatwebsite.com", html_options: { target: :blank }
                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/initializers/active_admin.rb:229:82: C: Metrics/LineLength: Line is too long. [116/80]
  #       menu.add label: "My Great Website", url: "http://www.mygreatwebsite.com", html_options: { target: :blank }
                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/application.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
require_relative 'boot'
^
config/application.rb:10:3: C: Style/Documentation: Missing top-level class documentation comment.
  class Application < Rails::Application
  ^^^^^
config/application.rb:14:81: C: Metrics/LineLength: Line is too long. [82/80]
    # Settings in config/environments/* take precedence over those specified here.
                                                                                ^^
config/puma.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
workers Integer(ENV['WEB_CONCURRENCY'] || 2)
^
config/puma.rb:15:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
config/spring.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
%w[
^
config/environment.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
# Load the Rails application.
^
config/routes.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
Rails.application.routes.draw do
^
config/routes.rb:4:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  root to: "visitors#index"
           ^^^^^^^^^^^^^^^^
config/routes.rb:5:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
config/routes.rb:8:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get "/users" => "users#index"
      ^^^^^^^^
config/routes.rb:8:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  get "/users" => "users#index"
                  ^^^^^^^^^^^^^
config/routes.rb:12:1: C: Layout/EmptyLines: Extra blank line detected.
config/boot.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
ENV['BUNDLE_GEMFILE'] ||= File.expand_path('../Gemfile', __dir__)
^
config/environments/production.rb:1:1: C: Metrics/BlockLength: Block has too many lines. [34/25]
Rails.application.configure do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
Rails.application.configure do
^
config/environments/production.rb:2:81: C: Metrics/LineLength: Line is too long. [85/80]
  # Settings specified here will take precedence over those in config/application.rb.
                                                                                ^^^^^
config/environments/production.rb:17:81: C: Metrics/LineLength: Line is too long. [87/80]
  # Ensures that a master key has been made available in either ENV["RAILS_MASTER_KEY"]
                                                                                ^^^^^^^
config/environments/production.rb:18:81: C: Metrics/LineLength: Line is too long. [97/80]
  # or in config/master.key. This key is used to decrypt credentials (and other encrypted files).
                                                                                ^^^^^^^^^^^^^^^^^
config/environments/production.rb:32:81: C: Metrics/LineLength: Line is too long. [102/80]
  # `config.assets.precompile` and `config.assets.version` have moved to config/initializers/assets.rb
                                                                                ^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:41:81: C: Metrics/LineLength: Line is too long. [86/80]
  # Store uploaded files on the local file system (see config/storage.yml for options)
                                                                                ^^^^^^
config/environments/production.rb:42:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
config/environments/production.rb:46:81: C: Metrics/LineLength: Line is too long. [96/80]
  # config.action_cable.allowed_request_origins = [ 'http://example.com', /http:\/\/example.*/ ]
                                                                                ^^^^^^^^^^^^^^^^
config/environments/production.rb:48:81: C: Metrics/LineLength: Line is too long. [96/80]
  # Force all access to the app over SSL, use Strict-Transport-Security, and use secure cookies.
                                                                                ^^^^^^^^^^^^^^^^
config/environments/production.rb:56:22: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
  config.log_tags = [ :request_id ]
                     ^
config/environments/production.rb:56:34: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
  config.log_tags = [ :request_id ]
                                 ^
config/environments/production.rb:61:81: C: Metrics/LineLength: Line is too long. [83/80]
  # Use a real queuing backend for Active Job (and separate queues per environment)
                                                                                ^^^
config/environments/production.rb:68:81: C: Metrics/LineLength: Line is too long. [100/80]
  # Set this to true and configure the email server for immediate delivery to raise delivery errors.
                                                                                ^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:83:81: C: Metrics/LineLength: Line is too long. [83/80]
  # config.logger = ActiveSupport::TaggedLogging.new(Syslog::Logger.new 'app-name')
                                                                                ^^^
config/environments/production.rb:85:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  if ENV["RAILS_LOG_TO_STDOUT"].present?
         ^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:94:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
config/environments/production.rb:100:47: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  config.action_mailer.default_url_options = { 
                                              ^
config/environments/production.rb:101:5: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :host => ENV['MAILER_URL'] 
    ^^^^^^^^
config/environments/production.rb:101:31: C: Layout/TrailingWhitespace: Trailing whitespace detected.
    :host => ENV['MAILER_URL'] 
                              ^
config/environments/production.rb:105:5: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
    :address              => 'smtp.gmail.com',
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:105:5: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :address              => 'smtp.gmail.com',
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:106:5: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
    :port                 => 587,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:106:5: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :port                 => 587,
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:107:5: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
    :domain               => ENV['GMAIL_DOMAIN'],
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:107:5: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :domain               => ENV['GMAIL_DOMAIN'],
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:108:5: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
    :user_name            => ENV['GMAIL_USERNAME'],
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:108:5: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :user_name            => ENV['GMAIL_USERNAME'],
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:109:5: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
    :password             => ENV['GMAIL_PASSWORD'],
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:109:5: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :password             => ENV['GMAIL_PASSWORD'],
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:110:5: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
    :authentication       => 'login',
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:110:5: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :authentication       => 'login',
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:111:5: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :enable_starttls_auto => true,
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/production.rb:111:34: C: Style/TrailingCommaInHashLiteral: Avoid comma after the last item of a hash.
    :enable_starttls_auto => true,
                                 ^
config/environments/production.rb:114:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
config/environments/test.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
Rails.application.configure do
^
config/environments/test.rb:2:81: C: Metrics/LineLength: Line is too long. [85/80]
  # Settings specified here will take precedence over those in config/application.rb.
                                                                                ^^^^^
config/environments/development.rb:1:1: C: Metrics/BlockLength: Block has too many lines. [34/25]
Rails.application.configure do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
Rails.application.configure do
^
config/environments/development.rb:2:81: C: Metrics/LineLength: Line is too long. [85/80]
  # Settings specified here will take precedence over those in config/application.rb.
                                                                                ^^^^^
config/environments/development.rb:54:81: C: Metrics/LineLength: Line is too long. [86/80]
  # Store uploaded files on the local file system (see config/storage.yml for options)
                                                                                ^^^^^^
config/environments/development.rb:63:5: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
    :address              => 'smtp.gmail.com',
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:63:5: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :address              => 'smtp.gmail.com',
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:64:5: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
    :port                 => 587,
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:64:5: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :port                 => 587,
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:65:5: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
    :domain               => ENV['GMAIL_DOMAIN'],
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:65:5: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :domain               => ENV['GMAIL_DOMAIN'],
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:66:5: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
    :user_name            => ENV['GMAIL_USERNAME'],
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:66:5: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :user_name            => ENV['GMAIL_USERNAME'],
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:67:5: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
    :password             => ENV['GMAIL_PASSWORD'],
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:67:5: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :password             => ENV['GMAIL_PASSWORD'],
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:68:5: C: Layout/AlignHash: Align the elements of a hash literal if they span more than one line.
    :authentication       => 'login',
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:68:5: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :authentication       => 'login',
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:69:5: C: Style/HashSyntax: Use the new Ruby 1.9 hash syntax.
    :enable_starttls_auto => true,
    ^^^^^^^^^^^^^^^^^^^^^^^^
config/environments/development.rb:69:34: C: Style/TrailingCommaInHashLiteral: Avoid comma after the last item of a hash.
    :enable_starttls_auto => true,
                                 ^
config/environments/development.rb:71:1: C: Layout/TrailingWhitespace: Trailing whitespace detected.
app/models/admin_user.rb:1:1: C: Style/Documentation: Missing top-level class documentation comment.
class AdminUser < ApplicationRecord
^^^^^
app/models/admin_user.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
class AdminUser < ApplicationRecord
^
app/models/admin_user.rb:4:36: C: Layout/TrailingWhitespace: Trailing whitespace detected.
  devise :database_authenticatable, 
                                   ^
app/models/application_record.rb:1:1: C: Style/Documentation: Missing top-level class documentation comment.
class ApplicationRecord < ActiveRecord::Base
^^^^^
app/models/application_record.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
class ApplicationRecord < ActiveRecord::Base
^
app/models/photo.rb:1:1: C: Style/Documentation: Missing top-level class documentation comment.
class Photo < ApplicationRecord
^^^^^
app/models/photo.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
class Photo < ApplicationRecord
^
app/models/photo.rb:2:1: C: Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.
has_one_attached :image

app/models/photo.rb:3:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
app/models/photo.rb:4:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
app/models/user.rb:1:1: C: Style/Documentation: Missing top-level class documentation comment.
class User < ApplicationRecord
^^^^^
app/models/user.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
class User < ApplicationRecord
^
app/views/photos/_photo.json.jbuilder:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
json.extract! photo, :id, :page_name, :caption, :sequence, :created_at, :updated_at
^
app/views/photos/_photo.json.jbuilder:1:81: C: Metrics/LineLength: Line is too long. [83/80]
json.extract! photo, :id, :page_name, :caption, :sequence, :created_at, :updated_at
                                                                                ^^^
app/views/photos/index.json.jbuilder:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
json.array! @photos, partial: 'photos/photo', as: :photo
^
app/views/photos/show.json.jbuilder:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
json.partial! "photos/photo", photo: @photo
^
app/views/photos/show.json.jbuilder:1:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
json.partial! "photos/photo", photo: @photo
              ^^^^^^^^^^^^^^
app/controllers/application_controller.rb:1:1: C: Style/Documentation: Missing top-level class documentation comment.
class ApplicationController < ActionController::Base
^^^^^
app/controllers/application_controller.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
class ApplicationController < ActionController::Base
^
app/controllers/application_controller.rb:2:1: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	protect_from_forgery with: :null_session
^
app/controllers/application_controller.rb:2:1: C: Layout/Tab: Tab detected.
	protect_from_forgery with: :null_session
^
app/controllers/application_controller.rb:3:1: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	before_action :configure_permitted_parameters, if: :devise_controller?
^
app/controllers/application_controller.rb:3:1: C: Layout/Tab: Tab detected.
	before_action :configure_permitted_parameters, if: :devise_controller?
^
app/controllers/application_controller.rb:7:3: C: Layout/IndentationConsistency: Inconsistent indentation detected.
  def configure_permitted_parameters ...
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/application_controller.rb:10:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
app/controllers/visitors_controller.rb:1:1: C: Style/Documentation: Missing top-level class documentation comment.
class VisitorsController < ApplicationController
^^^^^
app/controllers/visitors_controller.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
class VisitorsController < ApplicationController
^
app/controllers/visitors_controller.rb:2:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.
app/controllers/visitors_controller.rb:3:1: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def index
^
app/controllers/visitors_controller.rb:3:1: C: Layout/Tab: Tab detected.
	def index
^
app/controllers/visitors_controller.rb:4:1: C: Layout/Tab: Tab detected.
		@user = current_user;
^^
app/controllers/visitors_controller.rb:4:2: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		@user = current_user;
 ^
app/controllers/visitors_controller.rb:4:23: C: Style/Semicolon: Do not use semicolons to terminate expressions.
		@user = current_user;
                      ^
app/controllers/visitors_controller.rb:5:1: C: Layout/Tab: Tab detected.
	end
^
app/controllers/visitors_controller.rb:6:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body end.
app/controllers/photos_controller.rb:1:1: C: Style/Documentation: Missing top-level class documentation comment.
class PhotosController < InheritedResources::Base
^^^^^
app/controllers/photos_controller.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
class PhotosController < InheritedResources::Base
^
app/controllers/photos_controller.rb:2:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.
app/controllers/photos_controller.rb:3:1: C: Layout/IndentationWidth: Use 2 (not 0) spaces for indentation.
def delete

app/controllers/photos_controller.rb:4:1: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	self.destroy
^
app/controllers/photos_controller.rb:4:1: C: Layout/Tab: Tab detected.
	self.destroy
^
app/controllers/photos_controller.rb:4:2: C: Style/RedundantSelf: Redundant self detected.
	self.destroy
 ^^^^^^^^^^^^
app/controllers/photos_controller.rb:6:3: C: Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
  private
  ^^^^^^^
app/controllers/photos_controller.rb:7:1: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def photo_params
^^^^
app/controllers/photos_controller.rb:7:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    def photo_params ...
    ^^^^^^^^^^^^^^^^
app/controllers/photos_controller.rb:11:1: C: Layout/TrailingBlankLines: 1 trailing blank lines detected.
app/controllers/users_controller.rb:1:1: C: Style/Documentation: Missing top-level class documentation comment.
class UsersController < InheritedResources::Base
^^^^^
app/controllers/users_controller.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
class UsersController < InheritedResources::Base
^
app/controllers/users_controller.rb:2:1: C: Layout/EmptyLinesAroundClassBody: Extra empty line detected at class body beginning.
app/controllers/users_controller.rb:3:1: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def index
^
app/controllers/users_controller.rb:3:1: C: Layout/Tab: Tab detected.
	def index
^
app/controllers/users_controller.rb:4:1: C: Layout/Tab: Tab detected.
		@eight_chan_banner_url = "https://sys.8ch.net/banners.php?b="
^^
app/controllers/users_controller.rb:4:2: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		@eight_chan_banner_url = "https://sys.8ch.net/banners.php?b="
 ^
app/controllers/users_controller.rb:4:28: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
		@eight_chan_banner_url = "https://sys.8ch.net/banners.php?b="
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:5:1: C: Layout/Tab: Tab detected.
		@eight_chan_url="https://8ch.net/"
^^
app/controllers/users_controller.rb:5:18: C: Layout/SpaceAroundOperators: Surrounding space missing for operator =.
		@eight_chan_url="https://8ch.net/"
                 ^
app/controllers/users_controller.rb:5:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
		@eight_chan_url="https://8ch.net/"
                  ^^^^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:6:1: C: Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body end.
app/controllers/users_controller.rb:7:1: C: Layout/Tab: Tab detected.
	end
^
app/controllers/users_controller.rb:9:3: C: Layout/IndentationConsistency: Inconsistent indentation detected.
  def show ...
  ^^^^^^^^
app/controllers/users_controller.rb:10:3: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
      @user = User.find(params[:id])
  ^^^^
app/controllers/users_controller.rb:12:3: C: Layout/EmptyLinesAroundAccessModifier: Keep a blank line before and after private.
  private
  ^^^^^^^
app/controllers/users_controller.rb:13:1: C: Layout/IndentationWidth: Use 2 (not 4) spaces for indentation.
    def user_params
^^^^
app/controllers/users_controller.rb:13:5: C: Layout/IndentationConsistency: Inconsistent indentation detected.
    def user_params ...
    ^^^^^^^^^^^^^^^
app/controllers/users_controller.rb:14:81: C: Metrics/LineLength: Line is too long. [88/80]
      params.require(:user).permit(:username, :email, :password, :password_confirmation)
                                                                                ^^^^^^^^
app/controllers/users_controller.rb:17:1: C: Layout/TrailingBlankLines: 1 trailing blank lines detected.
app/helpers/users_helper.rb:1:1: C: Style/Documentation: Missing top-level module documentation comment.
module UsersHelper
^^^^^^
app/helpers/users_helper.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
module UsersHelper
^
app/helpers/photos_helper.rb:1:1: C: Style/Documentation: Missing top-level module documentation comment.
module PhotosHelper
^^^^^^
app/helpers/photos_helper.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
module PhotosHelper
^
app/helpers/visitors_helper.rb:1:1: C: Style/Documentation: Missing top-level module documentation comment.
module VisitorsHelper
^^^^^^
app/helpers/visitors_helper.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
module VisitorsHelper
^
app/helpers/visitors_helper.rb:2:1: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
	def get_images(page_name="cover")
^
app/helpers/visitors_helper.rb:2:1: C: Layout/Tab: Tab detected.
	def get_images(page_name="cover")
^
app/helpers/visitors_helper.rb:2:26: C: Layout/SpaceAroundEqualsInParameterDefault: Surrounding space missing in default value assignment.
	def get_images(page_name="cover")
                         ^
app/helpers/visitors_helper.rb:2:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
	def get_images(page_name="cover")
                          ^^^^^^^
app/helpers/visitors_helper.rb:3:1: C: Layout/Tab: Tab detected.
		get_images = Photo.where(page_name: page_name)
^^
app/helpers/visitors_helper.rb:3:2: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
		get_images = Photo.where(page_name: page_name)
 ^
app/helpers/visitors_helper.rb:3:3: W: Lint/UselessAssignment: Useless assignment to variable - get_images.
		get_images = Photo.where(page_name: page_name)
  ^^^^^^^^^^
app/helpers/visitors_helper.rb:4:1: C: Layout/Tab: Tab detected.
	end
^
app/helpers/application_helper.rb:1:1: C: Style/Documentation: Missing top-level module documentation comment.
module ApplicationHelper
^^^^^^
app/helpers/application_helper.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
module ApplicationHelper
^
app/admin/users.rb:1:1: C: Metrics/BlockLength: Block has too many lines. [27/25]
ActiveAdmin.register User do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/admin/users.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
ActiveAdmin.register User do
^
app/admin/users.rb:2:1: C: Layout/IndentationWidth: Use 2 (not 1) spaces for indentation.
 permit_params :username, :email, :password, :password_confirmation
^
app/admin/users.rb:3:3: C: Layout/IndentationConsistency: Inconsistent indentation detected.
  index do ...
  ^^^^^^^^
app/admin/users.rb:14:3: C: Layout/IndentationConsistency: Inconsistent indentation detected.
  filter :email
  ^^^^^^^^^^^^^
app/admin/users.rb:15:3: C: Layout/IndentationConsistency: Inconsistent indentation detected.
  filter :current_sign_in_at
  ^^^^^^^^^^^^^^^^^^^^^^^^^^
app/admin/users.rb:16:3: C: Layout/IndentationConsistency: Inconsistent indentation detected.
  filter :sign_in_count
  ^^^^^^^^^^^^^^^^^^^^^
app/admin/users.rb:17:3: C: Layout/IndentationConsistency: Inconsistent indentation detected.
  filter :created_at
  ^^^^^^^^^^^^^^^^^^
app/admin/users.rb:19:3: C: Layout/IndentationConsistency: Inconsistent indentation detected.
  form do |f| ...
  ^^^^^^^^^^^
app/admin/users.rb:29:1: C: Layout/IndentationConsistency: Inconsistent indentation detected.
def user_params ...
^^^^^^^^^^^^^^^
app/admin/users.rb:30:1: C: Layout/IndentationWidth: Use 2 (not 6) spaces for indentation.
      params.require(:user).permit( :username, :email, :password, :password_confirmation)
^^^^^^
app/admin/users.rb:30:36: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      params.require(:user).permit( :username, :email, :password, :password_confirmation)
                                   ^
app/admin/users.rb:30:81: C: Metrics/LineLength: Line is too long. [89/80]
      params.require(:user).permit( :username, :email, :password, :password_confirmation)
                                                                                ^^^^^^^^^
app/admin/users.rb:31:5: W: Layout/DefEndAlignment: end at 31, 4 is not aligned with def at 29, 0.
    end
    ^^^
app/admin/users.rb:32:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
app/admin/dashboard.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
ActiveAdmin.register_page "Dashboard" do
^
app/admin/dashboard.rb:1:27: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
ActiveAdmin.register_page "Dashboard" do
                          ^^^^^^^^^^^
app/admin/dashboard.rb:2:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
app/admin/dashboard.rb:3:32: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
  menu priority: 1, label: proc{ I18n.t("active_admin.dashboard") }
                               ^
app/admin/dashboard.rb:3:41: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  menu priority: 1, label: proc{ I18n.t("active_admin.dashboard") }
                                        ^^^^^^^^^^^^^^^^^^^^^^^^
app/admin/dashboard.rb:5:22: C: Layout/SpaceBeforeBlockBraces: Space missing to the left of {.
  content title: proc{ I18n.t("active_admin.dashboard") } do
                     ^
app/admin/dashboard.rb:5:31: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  content title: proc{ I18n.t("active_admin.dashboard") } do
                              ^^^^^^^^^^^^^^^^^^^^^^^^
app/admin/dashboard.rb:6:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    div class: "blank_slate_container", id: "dashboard_default_message" do
               ^^^^^^^^^^^^^^^^^^^^^^^
app/admin/dashboard.rb:6:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    div class: "blank_slate_container", id: "dashboard_default_message" do
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/admin/dashboard.rb:7:19: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      span class: "blank_slate" do
                  ^^^^^^^^^^^^^
app/admin/dashboard.rb:8:21: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        span I18n.t("active_admin.dashboard_welcome.welcome")
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/admin/dashboard.rb:9:22: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        small I18n.t("active_admin.dashboard_welcome.call_to_action")
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app/admin/dashboard.rb:32:7: C: Style/CommentedKeyword: Do not place comments on the same line as the end keyword.
  end # content
      ^^^^^^^^^
app/admin/photos.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
ActiveAdmin.register Photo do
^
app/admin/photos.rb:13:1: C: Layout/CommentIndentation: Incorrect indentation detected (column 0 instead of 2).
# end
^^^^^
app/admin/photos.rb:14:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
app/admin/admin_users.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
ActiveAdmin.register AdminUser do
^
app/admin/admin_users.rb:28:1: C: Layout/IndentationConsistency: Inconsistent indentation detected.
def admin_user_params ...
^^^^^^^^^^^^^^^^^^^^^
app/admin/admin_users.rb:29:1: C: Layout/IndentationWidth: Use 2 (not 6) spaces for indentation.
      params.require(:admin_user).permit( :email, :password, :password_confirmation)
^^^^^^
app/admin/admin_users.rb:29:42: C: Layout/SpaceInsideParens: Space inside parentheses detected.
      params.require(:admin_user).permit( :email, :password, :password_confirmation)
                                         ^
app/admin/admin_users.rb:29:81: C: Metrics/LineLength: Line is too long. [84/80]
      params.require(:admin_user).permit( :email, :password, :password_confirmation)
                                                                                ^^^^
app/admin/admin_users.rb:30:5: W: Layout/DefEndAlignment: end at 30, 4 is not aligned with def at 28, 0.
    end
    ^^^
app/mailers/application_mailer.rb:1:1: C: Style/Documentation: Missing top-level class documentation comment.
class ApplicationMailer < ActionMailer::Base
^^^^^
app/mailers/application_mailer.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
class ApplicationMailer < ActionMailer::Base
^
app/mailers/application_mailer.rb:4:4: C: Layout/TrailingBlankLines: Final newline missing.
end
   
app/channels/application_cable/channel.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
module ApplicationCable
^
app/channels/application_cable/connection.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
module ApplicationCable
^
app/jobs/application_job.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
class ApplicationJob < ActiveJob::Base
^
db/migrate/20181026173343_create_active_admin_comments.rb:1:1: C: Style/Documentation: Missing top-level class documentation comment.
class CreateActiveAdminComments < ActiveRecord::Migration::Current
^^^^^
db/migrate/20181026173343_create_active_admin_comments.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
class CreateActiveAdminComments < ActiveRecord::Migration::Current
^
db/migrate/20181026173343_create_active_admin_comments.rb:11:1: C: Layout/EmptyLinesAroundMethodBody: Extra empty line detected at method body end.
db/migrate/20181026185318_create_active_storage_tables.rb:1:1: C: Style/Documentation: Missing top-level class documentation comment.
class CreateActiveStorageTables < ActiveRecord::Migration[5.2]
^^^^^
db/migrate/20181026185318_create_active_storage_tables.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
class CreateActiveStorageTables < ActiveRecord::Migration[5.2]
^
db/migrate/20181026185318_create_active_storage_tables.rb:2:3: C: Metrics/MethodLength: Method has too many lines. [17/10]
  def change ...
  ^^^^^^^^^^
db/migrate/20181026185318_create_active_storage_tables.rb:12:16: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
      t.index [ :key ], unique: true
               ^
db/migrate/20181026185318_create_active_storage_tables.rb:12:21: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
      t.index [ :key ], unique: true
                    ^
db/migrate/20181026185318_create_active_storage_tables.rb:22:15: C: Style/SymbolArray: Use %i or %I for an array of symbols.
      t.index [ :record_type, :record_id, :name, :blob_id ], name: "index_active_storage_attachments_uniqueness", unique: true
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20181026185318_create_active_storage_tables.rb:22:16: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
      t.index [ :record_type, :record_id, :name, :blob_id ], name: "index_active_storage_attachments_uniqueness", unique: true
               ^
db/migrate/20181026185318_create_active_storage_tables.rb:22:58: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
      t.index [ :record_type, :record_id, :name, :blob_id ], name: "index_active_storage_attachments_uniqueness", unique: true
                                                         ^
db/migrate/20181026185318_create_active_storage_tables.rb:22:68: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.index [ :record_type, :record_id, :name, :blob_id ], name: "index_active_storage_attachments_uniqueness", unique: true
                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20181026185318_create_active_storage_tables.rb:22:81: C: Metrics/LineLength: Line is too long. [126/80]
      t.index [ :record_type, :record_id, :name, :blob_id ], name: "index_active_storage_attachments_uniqueness", unique: true
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20181101234929_create_photos.rb:1:1: C: Style/Documentation: Missing top-level class documentation comment.
class CreatePhotos < ActiveRecord::Migration[5.2]
^^^^^
db/migrate/20181101234929_create_photos.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
class CreatePhotos < ActiveRecord::Migration[5.2]
^
db/migrate/20181026173111_devise_create_users.rb:3:1: C: Style/Documentation: Missing top-level class documentation comment.
class DeviseCreateUsers < ActiveRecord::Migration[5.2]
^^^^^
db/migrate/20181026173111_devise_create_users.rb:4:3: C: Metrics/AbcSize: Assignment Branch Condition size for change is too high. [20/15]
  def change ...
  ^^^^^^^^^^
db/migrate/20181026173111_devise_create_users.rb:4:3: C: Metrics/MethodLength: Method has too many lines. [21/10]
  def change ...
  ^^^^^^^^^^
db/migrate/20181026173111_devise_create_users.rb:6:59: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.string :username,           null: false, default: ""
                                                          ^^
db/migrate/20181026173111_devise_create_users.rb:8:59: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.string :email,              null: false, default: ""
                                                          ^^
db/migrate/20181026173111_devise_create_users.rb:9:59: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.string :encrypted_password, null: false, default: ""
                                                          ^^
db/migrate/20181026173111_devise_create_users.rb:32:81: C: Metrics/LineLength: Line is too long. [104/80]
      # t.integer  :failed_attempts, default: 0, null: false # Only if lock strategy is :failed_attempts
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20181026173111_devise_create_users.rb:36:1: C: Layout/EmptyLines: Extra blank line detected.
db/migrate/20181026173342_devise_create_admin_users.rb:3:1: C: Style/Documentation: Missing top-level class documentation comment.
class DeviseCreateAdminUsers < ActiveRecord::Migration[5.2]
^^^^^
db/migrate/20181026173342_devise_create_admin_users.rb:7:59: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.string :email,              null: false, default: ""
                                                          ^^
db/migrate/20181026173342_devise_create_admin_users.rb:8:59: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      t.string :encrypted_password, null: false, default: ""
                                                          ^^
db/migrate/20181026173342_devise_create_admin_users.rb:31:81: C: Metrics/LineLength: Line is too long. [104/80]
      # t.integer  :failed_attempts, default: 0, null: false # Only if lock strategy is :failed_attempts
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^
db/migrate/20181026173342_devise_create_admin_users.rb:35:1: C: Layout/EmptyLines: Extra blank line detected.
db/seeds.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
AdminUser.create!([
^
db/seeds.rb:2:3: C: Layout/IndentArray: Use 2 spaces for indentation in an array, relative to the first position after the preceding left parenthesis.
  {email: "admin@example.com", password: "password", password_confirmation: "password"}
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:2:3: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
  {email: "admin@example.com", password: "password", password_confirmation: "password"}
  ^
db/seeds.rb:2:11: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  {email: "admin@example.com", password: "password", password_confirmation: "password"}
          ^^^^^^^^^^^^^^^^^^^
db/seeds.rb:2:42: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  {email: "admin@example.com", password: "password", password_confirmation: "password"}
                                         ^^^^^^^^^^
db/seeds.rb:2:77: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  {email: "admin@example.com", password: "password", password_confirmation: "password"}
                                                                            ^^^^^^^^^^
db/seeds.rb:2:81: C: Metrics/LineLength: Line is too long. [87/80]
  {email: "admin@example.com", password: "password", password_confirmation: "password"}
                                                                                ^^^^^^^
db/seeds.rb:2:87: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
  {email: "admin@example.com", password: "password", password_confirmation: "password"}
                                                                                      ^
db/seeds.rb:3:1: C: Layout/IndentArray: Indent the right bracket the same as the first position after the preceding left parenthesis.
])
^
db/seeds.rb:5:3: C: Layout/IndentArray: Use 2 spaces for indentation in an array, relative to the first position after the preceding left parenthesis.
  {username: "Damon Hopkins", email: "damon@hopkins-family.org", password: "password", password_confirmation: "password"}
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:5:3: C: Layout/SpaceInsideHashLiteralBraces: Space inside { missing.
  {username: "Damon Hopkins", email: "damon@hopkins-family.org", password: "password", password_confirmation: "password"}
  ^
db/seeds.rb:5:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  {username: "Damon Hopkins", email: "damon@hopkins-family.org", password: "password", password_confirmation: "password"}
             ^^^^^^^^^^^^^^^
db/seeds.rb:5:38: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  {username: "Damon Hopkins", email: "damon@hopkins-family.org", password: "password", password_confirmation: "password"}
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:5:76: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  {username: "Damon Hopkins", email: "damon@hopkins-family.org", password: "password", password_confirmation: "password"}
                                                                           ^^^^^^^^^^
db/seeds.rb:5:81: C: Metrics/LineLength: Line is too long. [121/80]
  {username: "Damon Hopkins", email: "damon@hopkins-family.org", password: "password", password_confirmation: "password"}
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/seeds.rb:5:111: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  {username: "Damon Hopkins", email: "damon@hopkins-family.org", password: "password", password_confirmation: "password"}
                                                                                                              ^^^^^^^^^^
db/seeds.rb:5:121: C: Layout/SpaceInsideHashLiteralBraces: Space inside } missing.
  {username: "Damon Hopkins", email: "damon@hopkins-family.org", password: "password", password_confirmation: "password"}
                                                                                                                        ^
db/seeds.rb:6:1: C: Layout/IndentArray: Indent the right bracket the same as the first position after the preceding left parenthesis.
])
^
db/schema.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
# This file is auto-generated from the current state of the database. Instead
^
db/schema.rb:3:81: C: Metrics/LineLength: Line is too long. [81/80]
# incrementally modify your database, and then regenerate this schema definition.
                                                                                ^
db/schema.rb:8:81: C: Metrics/LineLength: Line is too long. [86/80]
# from scratch. The latter is a flawed and unsustainable approach (the more migrations
                                                                                ^^^^^^
db/schema.rb:11:81: C: Metrics/LineLength: Line is too long. [86/80]
# It's strongly recommended that you check this file into your version control system.
                                                                                ^^^^^^
db/schema.rb:13:1: C: Metrics/BlockLength: Block has too many lines. [72/25]
ActiveRecord::Schema.define(version: 2018_11_01_234929) do ...
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:13:38: C: Style/NumericLiterals: Use underscores(_) as thousands separator and separate every 3 digits with them.
ActiveRecord::Schema.define(version: 2018_11_01_234929) do
                                     ^^^^^^^^^^^^^^^^^
db/schema.rb:14:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body beginning.
db/schema.rb:15:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "active_admin_comments", force: :cascade do |t|
               ^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:16:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "namespace"
             ^^^^^^^^^^^
db/schema.rb:17:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.text "body"
           ^^^^^^
db/schema.rb:18:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "resource_type"
             ^^^^^^^^^^^^^^^
db/schema.rb:19:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer "resource_id"
              ^^^^^^^^^^^^^
db/schema.rb:20:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "author_type"
             ^^^^^^^^^^^^^
db/schema.rb:21:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer "author_id"
              ^^^^^^^^^^^
db/schema.rb:22:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", null: false
               ^^^^^^^^^^^^
db/schema.rb:23:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at", null: false
               ^^^^^^^^^^^^
db/schema.rb:24:13: C: Style/WordArray: Use %w or %W for an array of words.
    t.index ["author_type", "author_id"], name: "index_active_admin_comments_on_author_type_and_author_id"
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:24:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["author_type", "author_id"], name: "index_active_admin_comments_on_author_type_and_author_id"
             ^^^^^^^^^^^^^
db/schema.rb:24:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["author_type", "author_id"], name: "index_active_admin_comments_on_author_type_and_author_id"
                            ^^^^^^^^^^^
db/schema.rb:24:49: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["author_type", "author_id"], name: "index_active_admin_comments_on_author_type_and_author_id"
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:24:81: C: Metrics/LineLength: Line is too long. [106/80]
    t.index ["author_type", "author_id"], name: "index_active_admin_comments_on_author_type_and_author_id"
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:25:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["namespace"], name: "index_active_admin_comments_on_namespace"
             ^^^^^^^^^^^
db/schema.rb:25:34: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["namespace"], name: "index_active_admin_comments_on_namespace"
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:26:13: C: Style/WordArray: Use %w or %W for an array of words.
    t.index ["resource_type", "resource_id"], name: "index_active_admin_comments_on_resource_type_and_resource_id"
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:26:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["resource_type", "resource_id"], name: "index_active_admin_comments_on_resource_type_and_resource_id"
             ^^^^^^^^^^^^^^^
db/schema.rb:26:31: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["resource_type", "resource_id"], name: "index_active_admin_comments_on_resource_type_and_resource_id"
                              ^^^^^^^^^^^^^
db/schema.rb:26:53: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["resource_type", "resource_id"], name: "index_active_admin_comments_on_resource_type_and_resource_id"
                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:26:81: C: Metrics/LineLength: Line is too long. [114/80]
    t.index ["resource_type", "resource_id"], name: "index_active_admin_comments_on_resource_type_and_resource_id"
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:29:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "active_storage_attachments", force: :cascade do |t|
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:30:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "name", null: false
             ^^^^^^
db/schema.rb:31:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "record_type", null: false
             ^^^^^^^^^^^^^
db/schema.rb:32:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer "record_id", null: false
              ^^^^^^^^^^^
db/schema.rb:33:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer "blob_id", null: false
              ^^^^^^^^^
db/schema.rb:34:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", null: false
               ^^^^^^^^^^^^
db/schema.rb:35:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["blob_id"], name: "index_active_storage_attachments_on_blob_id"
             ^^^^^^^^^
db/schema.rb:35:32: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["blob_id"], name: "index_active_storage_attachments_on_blob_id"
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:36:13: C: Style/WordArray: Use %w or %W for an array of words.
    t.index ["record_type", "record_id", "name", "blob_id"], name: "index_active_storage_attachments_uniqueness", unique: true
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:36:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["record_type", "record_id", "name", "blob_id"], name: "index_active_storage_attachments_uniqueness", unique: true
             ^^^^^^^^^^^^^
db/schema.rb:36:29: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["record_type", "record_id", "name", "blob_id"], name: "index_active_storage_attachments_uniqueness", unique: true
                            ^^^^^^^^^^^
db/schema.rb:36:42: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["record_type", "record_id", "name", "blob_id"], name: "index_active_storage_attachments_uniqueness", unique: true
                                         ^^^^^^
db/schema.rb:36:50: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["record_type", "record_id", "name", "blob_id"], name: "index_active_storage_attachments_uniqueness", unique: true
                                                 ^^^^^^^^^
db/schema.rb:36:68: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["record_type", "record_id", "name", "blob_id"], name: "index_active_storage_attachments_uniqueness", unique: true
                                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:36:81: C: Metrics/LineLength: Line is too long. [126/80]
    t.index ["record_type", "record_id", "name", "blob_id"], name: "index_active_storage_attachments_uniqueness", unique: true
                                                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:39:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "active_storage_blobs", force: :cascade do |t|
               ^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:40:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "key", null: false
             ^^^^^
db/schema.rb:41:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "filename", null: false
             ^^^^^^^^^^
db/schema.rb:42:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "content_type"
             ^^^^^^^^^^^^^^
db/schema.rb:43:12: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.text "metadata"
           ^^^^^^^^^^
db/schema.rb:44:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.bigint "byte_size", null: false
             ^^^^^^^^^^^
db/schema.rb:45:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "checksum", null: false
             ^^^^^^^^^^
db/schema.rb:46:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", null: false
               ^^^^^^^^^^^^
db/schema.rb:47:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["key"], name: "index_active_storage_blobs_on_key", unique: true
             ^^^^^
db/schema.rb:47:28: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["key"], name: "index_active_storage_blobs_on_key", unique: true
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:50:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "admin_users", force: :cascade do |t|
               ^^^^^^^^^^^^^
db/schema.rb:51:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "email", default: "", null: false
             ^^^^^^^
db/schema.rb:51:32: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "email", default: "", null: false
                               ^^
db/schema.rb:52:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "encrypted_password", default: "", null: false
             ^^^^^^^^^^^^^^^^^^^^
db/schema.rb:52:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "encrypted_password", default: "", null: false
                                            ^^
db/schema.rb:53:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "reset_password_token"
             ^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:54:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "reset_password_sent_at"
               ^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:55:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "remember_created_at"
               ^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:56:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", null: false
               ^^^^^^^^^^^^
db/schema.rb:57:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at", null: false
               ^^^^^^^^^^^^
db/schema.rb:58:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["email"], name: "index_admin_users_on_email", unique: true
             ^^^^^^^
db/schema.rb:58:30: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["email"], name: "index_admin_users_on_email", unique: true
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:59:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["reset_password_token"], name: "index_admin_users_on_reset_password_token", unique: true
             ^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:59:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["reset_password_token"], name: "index_admin_users_on_reset_password_token", unique: true
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:59:81: C: Metrics/LineLength: Line is too long. [101/80]
    t.index ["reset_password_token"], name: "index_admin_users_on_reset_password_token", unique: true
                                                                                ^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:62:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "photos", force: :cascade do |t|
               ^^^^^^^^
db/schema.rb:63:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "page_name"
             ^^^^^^^^^^^
db/schema.rb:64:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "caption"
             ^^^^^^^^^
db/schema.rb:65:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer "sequence"
              ^^^^^^^^^^
db/schema.rb:66:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", null: false
               ^^^^^^^^^^^^
db/schema.rb:67:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at", null: false
               ^^^^^^^^^^^^
db/schema.rb:70:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  create_table "users", force: :cascade do |t|
               ^^^^^^^
db/schema.rb:71:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "username", default: "", null: false
             ^^^^^^^^^^
db/schema.rb:71:35: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "username", default: "", null: false
                                  ^^
db/schema.rb:72:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "email", default: "", null: false
             ^^^^^^^
db/schema.rb:72:32: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "email", default: "", null: false
                               ^^
db/schema.rb:73:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "encrypted_password", default: "", null: false
             ^^^^^^^^^^^^^^^^^^^^
db/schema.rb:73:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "encrypted_password", default: "", null: false
                                            ^^
db/schema.rb:74:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "reset_password_token"
             ^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:75:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "reset_password_sent_at"
               ^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:76:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "remember_created_at"
               ^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:77:15: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.integer "sign_in_count", default: 0, null: false
              ^^^^^^^^^^^^^^^
db/schema.rb:78:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "current_sign_in_at"
               ^^^^^^^^^^^^^^^^^^^^
db/schema.rb:79:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "last_sign_in_at"
               ^^^^^^^^^^^^^^^^^
db/schema.rb:80:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "current_sign_in_ip"
             ^^^^^^^^^^^^^^^^^^^^
db/schema.rb:81:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "last_sign_in_ip"
             ^^^^^^^^^^^^^^^^^
db/schema.rb:82:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "confirmation_token"
             ^^^^^^^^^^^^^^^^^^^^
db/schema.rb:83:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "confirmed_at"
               ^^^^^^^^^^^^^^
db/schema.rb:84:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "confirmation_sent_at"
               ^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:85:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.string "unconfirmed_email"
             ^^^^^^^^^^^^^^^^^^^
db/schema.rb:86:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "created_at", null: false
               ^^^^^^^^^^^^
db/schema.rb:87:16: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.datetime "updated_at", null: false
               ^^^^^^^^^^^^
db/schema.rb:88:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["confirmation_token"], name: "index_users_on_confirmation_token", unique: true
             ^^^^^^^^^^^^^^^^^^^^
db/schema.rb:88:43: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["confirmation_token"], name: "index_users_on_confirmation_token", unique: true
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:88:81: C: Metrics/LineLength: Line is too long. [91/80]
    t.index ["confirmation_token"], name: "index_users_on_confirmation_token", unique: true
                                                                                ^^^^^^^^^^^
db/schema.rb:89:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["email"], name: "index_users_on_email", unique: true
             ^^^^^^^
db/schema.rb:89:30: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["email"], name: "index_users_on_email", unique: true
                             ^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:90:14: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["reset_password_token"], name: "index_users_on_reset_password_token", unique: true
             ^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:90:45: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    t.index ["reset_password_token"], name: "index_users_on_reset_password_token", unique: true
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
db/schema.rb:90:81: C: Metrics/LineLength: Line is too long. [95/80]
    t.index ["reset_password_token"], name: "index_users_on_reset_password_token", unique: true
                                                                                ^^^^^^^^^^^^^^^
db/schema.rb:92:1: C: Layout/EmptyLinesAroundBlockBody: Extra empty line detected at block body end.
spec/spec_helper.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
# This file was generated by the `rails generate rspec:install` command. Conventionally, all
^
spec/spec_helper.rb:1:81: C: Metrics/LineLength: Line is too long. [92/80]
# This file was generated by the `rails generate rspec:install` command. Conventionally, all
                                                                                ^^^^^^^^^^^^
spec/spec_helper.rb:49:1: C: Style/BlockComments: Do not use block comments.
=begin ...
^^^^^^
spec/rails_helper.rb:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
# This file is copied to spec/ when you run 'rails generate rspec:install'
^
spec/rails_helper.rb:4:14: C: Style/ExpandPathArguments: Use expand_path('../config/environment', __dir__) instead of expand_path('../../config/environment', __FILE__).
require File.expand_path('../../config/environment', __FILE__)
             ^^^^^^^^^^^
spec/rails_helper.rb:6:7: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
abort("The Rails environment is running in production mode!") if Rails.env.production?
      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/rails_helper.rb:6:81: C: Metrics/LineLength: Line is too long. [86/80]
abort("The Rails environment is running in production mode!") if Rails.env.production?
                                                                                ^^^^^^
bin/spring:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
#!/usr/bin/env ruby
^
bin/spring:11:56: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
  spring = lockfile.specs.detect { |spec| spec.name == "spring" }
                                                       ^^^^^^^^
bin/setup:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
#!/usr/bin/env ruby
^
bin/setup:3:1: C: Style/MixinUsage: include is used at the top level. Use inside class or module.
include FileUtils
^^^^^^^^^^^^^^^^^
bin/rake:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
#!/usr/bin/env ruby
^
bin/rake:3:13: C: Style/ExpandPathArguments: Use expand_path('spring', __dir__) instead of expand_path('../spring', __FILE__).
  load File.expand_path('../spring', __FILE__)
            ^^^^^^^^^^^
bin/update:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
#!/usr/bin/env ruby
^
bin/update:3:1: C: Style/MixinUsage: include is used at the top level. Use inside class or module.
include FileUtils
^^^^^^^^^^^^^^^^^
bin/bundle:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
#!/usr/bin/env ruby
^
bin/rails:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
#!/usr/bin/env ruby
^
bin/rails:3:13: C: Style/ExpandPathArguments: Use expand_path('spring', __dir__) instead of expand_path('../spring', __FILE__).
  load File.expand_path('../spring', __FILE__)
            ^^^^^^^^^^^
bin/yarn:1:1: C: Style/FrozenStringLiteralComment: Missing magic comment # frozen_string_literal: true.
#!/usr/bin/env ruby
^
bin/yarn:4:3: C: Style/RedundantBegin: Redundant begin block detected.
  begin
  ^^^^^
bin/yarn:5:10: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    exec "yarnpkg", *ARGV
         ^^^^^^^^^
bin/yarn:7:5: C: Style/StderrPuts: Use warn instead of $stderr.puts to allow such output to be disabled.
    $stderr.puts "Yarn executable was not detected in the system."
    ^^^^^^^^^^^^
bin/yarn:7:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    $stderr.puts "Yarn executable was not detected in the system."
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
bin/yarn:8:5: C: Style/StderrPuts: Use warn instead of $stderr.puts to allow such output to be disabled.
    $stderr.puts "Download Yarn at https://yarnpkg.com/en/docs/install"
    ^^^^^^^^^^^^
bin/yarn:8:18: C: Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    $stderr.puts "Download Yarn at https://yarnpkg.com/en/docs/install"
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

62 files inspected, 457 offenses detected
